;; could be sped up by snaking down the trie?
(define ($boggle board)
  (define size (board-size board))
  (define (ref xy)
    (string-ref (vector-ref board (car xy)) (cdr xy)))
  (define (indices->string indices)
    (list->string
     (fold-left (lambda (chars x)
                  (let ((x (ref x)))
                    (if (char=? x #\Q)
                        (cons* x #\U chars)
                        (cons x chars))))
                '()
                indices)))
  (define (expand words)
    (define (on-board? xy)
      (and (< -1 (car xy) size) (< -1 (cdr xy) size)))
    (define (expand-word word)
      (filter-map (lambda (xy)
                    (and (on-board? xy)
                         (not (member xy word))
                         (prefix? (indices->string (cons xy word)))
                         (cons xy word)))
                  (adjacent (car word))))
    (append-map expand-word words))
  (define start-indices
    (expand (expand (board-indices board))))
  (define (sort/nub words)
    (let ((seen (make-hashtable string-hash string=?)))
      (sort (lambda (A B)
              (or (< (string-length A) (string-length B)) (string<? A B)))
            (filter-map (lambda (word)
                          (let ((word (indices->string word)))
                            (and (word? word)
                                 (not (hashtable-ref seen word #f))
                                 (hashtable-set! seen word #t)
                                 word)))
                        words))))
  (let walk ((prefixes start-indices) (words '()))
    (if (null? prefixes)
        (sort/nub words)
        (walk (expand prefixes) (append prefixes words)))))

;; (define gobble (compose boggle string->board))

(define (gobble board)
  (dfs board collins))
